/*
 * Copyright 2022 teogor (Teodor Grigor) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package dev.teogor.ceres.m3.theme

import androidx.annotation.NonNull
import com.zeoflow.memo.Memo
import com.zeoflow.memo.NoEncryption
import javax.inject.Inject

/**
 * Code generated by Memo's Compiler. [link](https://github.com/zeoflow/memo)
 *
 * Code generated based on the [ThemeStore]
 */
class ThemeMemo @Inject constructor() {
  init {
    Memo.init().withEncryption(NoEncryption()).build()
  }

  /**
   * based on [ThemeStore.seed]
   */
  @NonNull
  var seed: String = StringDefault().value()
    get() = Memo["seed", field]
    set(`value`) {
      Memo.put("seed", value)
    }

  /**
   * based on [ThemeStore.appTheme]
   */
  @NonNull
  var appTheme: AppThemeType = AppThemeDefault().value()
    get() = Memo["appTheme", field]
    set(`value`) {
      Memo.put("appTheme", value)
    }

  /**
   * based on [ThemeStore.justBlackTheme]
   */
  @NonNull
  var justBlackTheme: JustBlackThemeType = JustBlackThemeDefault().value()
    get() = Memo["justBlackTheme", field]
    set(`value`) {
      Memo.put("justBlackTheme", value)
    }

  /**
   * based on [ThemeStore.materialYouEnabled]
   */
  @NonNull
  var materialYouEnabled: Boolean = TrueBooleanDefault().value()
    get() = Memo["materialYouEnabled", field]
    set(`value`) {
      Memo.put("materialYouEnabled", value)
    }

  /**
   * based on [ThemeStore.desaturatedColoursEnabled]
   */
  @NonNull
  var desaturatedColoursEnabled: Boolean = TrueBooleanDefault().value()
    get() = Memo["desaturatedColoursEnabled", field]
    set(`value`) {
      Memo.put("desaturatedColoursEnabled", value)
    }

  /**
   * based on [ThemeStore.colouredBackgroundEnabled]
   */
  @NonNull
  var colouredBackgroundEnabled: Boolean = FalseBooleanDefault().value()
    get() = Memo["colouredBackgroundEnabled", field]
    set(`value`) {
      Memo.put("colouredBackgroundEnabled", value)
    }
}
