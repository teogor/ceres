/*
 * Copyright 2022 teogor (Teodor Grigor) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package dev.teogor.ceres.presentation.memo

import androidx.`annotation`.NonNull
import com.zeoflow.memo.Memo
import com.zeoflow.memo.NoEncryption
import javax.inject.Inject
import kotlin.Boolean

/**
 * Code generated by Memo's Compiler. @see [link](https://github.com/zeoflow/memo)
 *
 * Code generated based on the [AppData]
 */
class AppMemo @Inject constructor() {
  init {
    Memo.init().withEncryption(NoEncryption()).build()
  }

  @NonNull
  var developerModeEnabled: Boolean = FalseBooleanDefault().value()
    get() = Memo["developerModeEnabled", field]
    set(`value`) {
      Memo.put("developerModeEnabled", value)
    }

  @NonNull
  var initialCheckCompleted: Boolean = FalseBooleanDefault().value()
    get() = Memo["initialCheckCompleted", field]
    set(`value`) {
      Memo.put("initialCheckCompleted", value)
    }

  @NonNull
  var onboardingApproved: Boolean = FalseBooleanDefault().value()
    get() = Memo["onboardingApproved", field]
    set(`value`) {
      Memo.put("onboardingApproved", value)
    }
}
